目录结构：Bin 全程binary,含义是二进制。文件都是可运行的。
	  Dev:该目录中主要存放的是外接设备，例如U盘，移动硬盘，光盘。在其中的外接设备是不能直接被使用的，需要挂载（类似于Windows下的分配盘符）。
	  Etc：该目录主要是存储一些配置文件。
	  Home:类似于User,除了Root意外的用户目录。
	  Proc:全程process（进程），存储Linux运行的进程。
	  Root：该目录是Root的家目录；
          Sbin:全程 suber binary,该目录也是存放一些可以执行的二进制文件，但是必须得有super权限的用户才能执行
	  Tmp:存放临时文件；（类似于Windows的Temp）
	  Usr：存放的用户自己安装的软件；类似于program files;
	  Var:存放是程序/系统的日志文件；
	  Mnt:当外接设备如果需要挂载的时候就需要挂载到Mnt目录下；
指令和选项：
	  Linux下指令通用的格式： 
	  ~$指令主题 [选项] [操作对象]
          一个指令可以包含多个选项和多个操作对象。

	 列如：需要让张三同学去留下小卖部去买一瓶肥宅快乐水和清风餐巾纸 
               买东西是指令的主体 ，买的水和餐巾纸是操作对象，肥宅快乐水和清风是选项；
基础命令 

ls (list) 列出 

用法1：ls 
	含义：列出当前目录所有文件
用法2 ：ls 路径
	含义：列出给出路径下面的文件
	关于路劲：路径可以分为两种：相对路径和绝对路径
	相对路径：相对首先得有一个参照物（一般就是当前的工作路径）；
	 相对路劲的写法：在相对路径中通常会用到两个符号
	 “./”[表示当前目录下]
         “../”[表示上一级目录下]
	绝对路径：绝对路径不需要参照物 直接从根“/”开始寻找对应路径
用法3：ls 选项 路径
	含义：在列出路径下的文件/文件夹的名称，并以指定的格式进行显示。
	常见的语法 ls -l 路径
		   ls -la 路径
	参数（选项）： -l 表示 list,表示以详细列表的形式进行展示；
		       列表中的第一列字符表示文档类型；
			“-”表示该行文档类型问文件：“d”表示文件夹
                       -a 表示显示所有的文件和文件夹（包含了隐藏文件和文件夹）
 		       隐藏文件一般是以“.”开头
用法4：ls -l[a]h 路径
        含义：列出指定路径下的所有文件和文件夹的名称以列表的形式并且在显示文档大小的时候以可读性较高的形式来进行显示；
		
--------------------
pwd

用法：pwd (print working directory)打印当前工作目录

----------------------
cd 命令 （change directory 改变目录）切换当前的工作目录

语法:cd 路径

补充： Linux中有一个“~”表示当前用户的家目录
------------------------
mkdir 命令

用户：mkdir (make directory 创建目录)
	语法: mkdir [路径] 文件名
	案例：在当前路径下创建目录“yunwei” mkdir xx
	注意：ls 列出结果颜色说明：其中蓝色的名称表示文件夹，黑色的表示文件，绿色的表示其权限未不是只读拥有所有权限。

	案例：指定的目录下面创建  mkdir /root/xx
 
用法2：mkdir -p[文件路径] 多层创建

	案例:mkdir -p /root/yunwei/a/b/c/d
	     查看 ls /root/yunwei/a/b/c/d

语法3: mkdir 路径1 路径2 路径...

----------------------
touch （创建指令）

	指令：touch 创建文件 
	语法: touch 路径
	案例: 用touch在当前目录下创建一个文件名，命名为Linux.txt; touch Linux.txt 
 	     用touch在执行目录Home下创建文件Linux123.txt ; touch /home/Linux123
	注意：文件不能包含多层 所以没有-p 但是可以创建多个文件

--------------------
cp （copy 复制）
	作用：复制文件/文件夹到指定的位置
	语法 cp 被复制的文档路径 文档被复制到的路径
	案例：使用cp来复制文件 
	注意：可以在复制过程中改名，cp在命令文件夹复制的时候添加 -r（递归复制）
	
---------------
mv 指令 （move 移动 剪切）
	作用：移动文档位置
	语法 mv 需要移动的文档路径 需要保存的位置路径
	主语：原始文件不在原位置
	案例：mv移动命令一个文件
		mv 文件 路径
              mv -r移动命令一个文件夹


	作用2：重命名
	语法: mv 需要移动的文档路径 需要保存的位置路径
------------
rm 命令（移除 remove）
	作用：移除删除一个文档
	语法 rm 选项 移除的路径
	选项：
		-f 再删除时不想频繁确认可以在指令中添加 表示 force(强制)
		-r 删除文件夹 递归删除 一般 -rf联合使用
	案例：不用选项删除文件 rm /路径 ？？？？没提示/会提示是否删除
	      删除一个文件夹 rm -r /文件夹路径	
	      删除文件夹和文件 rm -rf /路径 路径
	      删除一个目录下有公共特性的文件 例如Linux开头 rm -f /关键词 *（通配符）
------------
vim 命令 
	指令：vim（vim是一款文本编辑器）
	语法：vim 文件的路径
	作用：打开一个文件(可以存在也可以不存在)
	在没有按下其他命令的时候 :q（不保存退出） :wq(保存退出) :q！(强制退出)

-----------
输出重定向
	指令：一般的命令都会显示在终端中，有时候讲一些命令的执行结果保存到文件中进行后续的分析统计这个时候需要输出重定向;
	> 表示覆盖输出
	>> 追加输出
	注意：文件不存在自动新建
	
	案列：使用覆盖重定向，保存ls -la的结果  ls -la > 文件

-----------
cat 指令
	作用：cat 直接打开一个文件的功能 不同于vim
	语法 cat 文件的路径

	作用2：cat还可以对文件进行合并
	语法：cat 待合并的路径1 待合并的路径2 合并路径n > 新文件路径
	案列 cat a b > c 配合输出重定向
	

	